    {
        "type": "array",
        "properties": [
            {
                "key": "cluster",
                "description": "Cluster properties",
                "type": "array",
                "properties": [
                    {
                        "key": "name",
                        "label": "name",
                        "description": "The name of the service",
                        "type": "string",
                        "default": "QingCompute",
                        "required": "no"
                    },
                    {
                        "key": "description",
                        "label": "description",
                        "description": "The description of the service",
                        "type": "string",
                        "default": "",
                        "required": "no"
                    },
                    {
                        "key": "vxnet",
                        "label": "VxNet",
                        "description": "Choose a vxnet to join",
                        "type": "string",
                        "default": "",
                        "required": "yes"
                    },
		    {
		        "key": "external_service",
	                "label": "External Service",
            		"description": "Choose another application service to use, all the nodes in this external service will be added to hosts of current application service",
            		"type": "service",
            		"default": "",
            		"required": "no"
		    },
                    {
                        "key": "hdfs-master",
			"label": "HDFS master",
                        "description": "HDFS master properties",
                        "type": "array",
                        "properties": [
                            {
                                "key": "cpu",
                                "label": "CPU",
                                "description": "CPUs of each node",
                                "type": "integer",
                                "default": 2,
                                "range": [1,2,4,8,12,16],
                                "required": "yes"
                            },
                            {
                                "key": "memory",
                                "label": "Memory",
                                "description": "memory of each node (in MB)",
                                "type": "integer",
                                "default": 4096,
                                "range": [2048,4096,6144,8192,12288,16384,24576,32768,40960,49152,65536],
                                "required": "yes"
                            },
                            {
                                "key": "instance_class",
                                "label": "instance class",
                                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,1],
                                "required": "yes"
                            },
                            {
                                "key": "volume_class",
                                "label": "volume class",
                                "description": "The volume type for each instance, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,3],
                                "required": "yes"
                            },
                            {
                                "key": "volume_size",
                                "label": "volume size",
                                "description": "The volume size for each instance",
                                "type": "integer",
				"step": 10,
                                "default": 10,
				"min":	10,
				"max":	1000,
                                "required": "yes"
                            }
                        ]
                    },
                    {
                        "key": "yarn-master",
			"label": "YARN master",
                        "description": "YARN master properties",
                        "type": "array",
                        "properties": [
                            {
                                "key": "cpu",
                                "label": "CPU",
                                "description": "CPUs of each node",
                                "type": "integer",
                                "default": 2,
                                "range": [1,2,4,8,12,16],
                                "required": "yes"
                            },
                            {
                                "key": "memory",
                                "label": "Memory",
                                "description": "memory of each node (in MB)",
                                "type": "integer",
                                "default": 4096,
                                "range": [2048,4096,6144,8192,12288,16384,24576,32768,40960,49152,65536],
                                "required": "yes"
                            },
                            {
                                "key": "instance_class",
                                "label": "instance class",
                                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,1],
                                "required": "yes"
                            },
                            {
                                "key": "volume_class",
                                "label": "volume class",
                                "description": "The volume type for each instance, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,3],
                                "required": "yes"
                            },
                            {
                                "key": "volume_size",
                                "label": "volume size",
                                "description": "The volume size for each instance",
                                "type": "integer",
				"step": 10,
                                "default": 10,
				"min":	10,
				"max":	1000,
                                "required": "yes"
                            }
                        ]
                    },
                    {
                        "key": "slave",
			"label": "slave",
                        "description": "Slave properties",
                        "type": "array",
                        "properties": [
                            {
                                "key": "cpu",
                                "label": "CPU",
                                "description": "CPUs of each node",
                                "type": "integer",
                                "default": 4,
                                "range": [2,4,8,12,16],
                                "required": "yes"
                            },
                            {
                                "key": "memory",
                                "label": "Memory",
                                "description": "memory of each node (in MB)",
                                "type": "integer",
                                "default": 8192,
                                "range": [2048,4096,6144,8192,12288,16384,24576,32768,40960,49152,65536],
                                "required": "yes"
                            },
                            {
                                "key": "count",
                                "label": "count",
                                "description": "Number of nodes for the cluster to create",
                                "type": "integer",
                                "default": 3,
				"min":	3,
                                "required": "yes"
                            },
                            {
                                "key": "instance_class",
                                "label": "instance class",
                                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,1],
                                "required": "yes"
                            },
                            {
                                "key": "volume_class",
                                "label": "volume class",
                                "description": "The volume type for each instance, such as high performance, high performance plus",
                                "type": "integer",
                                "default": 0,
                                "range": [0,3],
                                "required": "yes"
                            },
                            {
                                "key": "volume_size",
                                "label": "volume size",
                                "description": "The volume size for each instance",
                                "type": "integer",
                                "step": 30,
                                "default": 30,
				"min":	30,
				"max":	3000,
                                "required": "yes"
                            }
                        ]
                    },
		    {
                        "key": "bigdata-client",
			"label": "Bigdata client",
                        "description": "Bigdata client properties",
                        "type": "array",
                        "properties": [
                            {
                                "key": "cpu",
                                "label": "CPU",
                                "description": "CPUs of each node",
                                "type": "integer",
                                "default": 2,
                                "range": [1,2,4,8],
                                "required": "yes"
                            },
                            {
                                "key": "memory",
                                "label": "Memory",
                                "description": "memory of each node (in MB)",
                                "type": "integer",
                                "default": 4096,
                                "range": [2048,4096,6144,8192,12288,16384],
                                "required": "yes"
                            },
                            {
                                "key": "count",
                                "label": "count",
                                "description": "Number of nodes for the cluster to create",
                                "type": "integer",
                                "default": 1,
                                "range": [0,1],
                                "required": "yes"
                            },
                            {
                                "key": "instance_class",
                                "label": "instance class",
                                "description":"The instance type for the cluster to run, such as high performance, high performance plus",
                                "type":"integer",
                                "default":0,
                                "range": [0,1],
                                "required":"yes"
                            },
                            {
                                "key": "volume_class",
                                "label": "volume class",
                                "description":"The volume type for each instance, such as high performance, high performance plus",
                                "type":"integer",
                                "default":0,
                                "range": [0,3],
                                "required":"yes"
                            },
                            {
                                "key": "volume_size",
                                "label": "volume size",
                                "description":"The volume size for each instance",
                                "type":"integer",
				"step": 10,
                                "default":10,
				"min":	10,
				"max":	1000,
                                "required":"yes"
                            }
                        ]
                    }
                ]
            },
            {
                "key": "env",
                "description": "Service properties",
                "type": "array",
                "properties": [
		    {
            		"key": "QingStor",
			"label": "QingStor",
			"description": "Whether to use QingStor",
			"type": "boolean",
			"default": false,
		        "range": [true,false],
		        "required":"no"
		    },
		    {
			"key": "access_key",
	                "label": "access_key",
            		"description": "QingStor access_key",
            		"type": "password",
		        "default": "",
		        "required":"no"
	            },
	            {
            		"key": "secret_key",
            		"label": "secret_key",
            		"description": "QingStor secret_key",
            		"type": "password",
            		"default": "",
            		"required":"no"
		    },
		    {
                    	"key": "spark_master_daemon_memory",
                        "label": "spark.master.SPARK_DAEMON_MEMORY",
                        "description": "Memory(in MB) allocated to spark master daemon(standalone mode). The upper limit is total memory - 1024",
                        "type": "integer",
			"default": 1024,
			"min":	1024,
			"max":	32768,
                        "required": "no"
                    },
		    {
                    	"key": "spark_worker_daemon_memory",
                        "label": "spark.worker.SPARK_DAEMON_MEMORY",
                        "description": "Memory(in MB) allocated to spark worker daemon(standalone mode). The upper limit is total memory - 1024",
                        "type": "integer",
			"default": 1024,
                        "min":	1024,
			"max":	32768,
                        "required": "no"
                    },
                    {
                        "key": "PYSPARK_PYTHON",
                        "label": "PYSPARK_PYTHON",
                        "description": "Specify the python version used by a python spark job, current supported python versions are 2.7.13 and 3.6.1. Anaconda distribution data science packages numpy, scikit-learn, scipy, Pandas, NLTK and Matplotlib are also included.",
                        "type": "string",
                        "default": "python2",
			"range": ["python2","python3"],
                        "required":"yes"
                    },
                    {
                        "key": "spark_worker_cleanup_enabled",
                        "label": "spark.worker.cleanup.enabled",
                        "description": "Enable periodic cleanup of worker/application directories. Only the directories of stopped applications are cleaned up",
                        "type": "string",
                        "default": "true",
			"range": ["true","false"],
                        "required":"yes"
                    },
                    {
                        "key": "spark_worker_cleanup_interval",
                        "label": "spark.worker.cleanup.interval",
                        "description": "Controls the interval, in seconds, at which the worker cleans up old application work dirs on the local machine, default to 28800 seconds(8 hours)",
                        "type": "integer",
                        "default": 28800,
			"min":	1800,
                        "required":"yes"
                    },
                    {
                        "key": "spark_worker_cleanup_appDataTtl",
                        "label": "spark.worker.cleanup.appDataTtl",
                        "description": "The number of seconds to retain application work directories on each worker, default to 86400 seconds(24 hours)",
                        "type": "integer",
                        "default": 86400,
			"min":	3600,
                        "required":"yes"
                    },
                    {
                        "key": "hadoop_proxyuser",
                        "label": "hadoop.proxyuser",
                        "description": "Hadoop proxy user",
                        "type": "string",
                        "default": "",
                        "required": "no"
                    },
                    {
                        "key": "hadoop_proxyuser_hosts",
                        "label": "hadoop.proxyuser.[hadoop_proxyuser].hosts",
                        "description": "Hosts the proxyuser can represent",
                        "type": "string",
                        "default": "*",
                        "required": "no"
                    },
                    {
                        "key": "hadoop_proxyuser_groups",
                        "label": "hadoop.proxyuser.[hadoop_proxyuser].groups",
                        "description": "Groups in hosts the proxyuser can represent",
                        "type": "string",
                        "default": "*",
                        "required": "no"
                    },
		    {
			"key": "node_manager_yarn_heapsize",
        		"label": "node_manager.YARN_HEAPSIZE",
        		"description": "The maximum amount of heap(in MB) to use by resource manager. It will be reset to current available free memory if 1000 is specified",
        		"type": "integer",
			"default": 1000,
			"min": 1000,
            		"required": "no"
		    },
		    {
			"key": "resource_manager_yarn_heapsize",
        		"label": "resource_manager.YARN_HEAPSIZE",
        		"description": "The maximum amount of heap(in MB) to use by resource manager. It will be reset to current available free memory if 1000 is specified",
        		"type": "integer",
			"default": 1000,
			"min": 1000,
            		"required": "no"
		    },
                    {
                        "key": "datanode_hadoop_heapsize",
                        "label": "datanode.HADOOP_HEAPSIZE",
                        "description": "The maximum amount of heap to use by datanode in MB, Default is 1000. The upper limit is total memory - 1024",
                        "type": "integer",
                        "default": 1000,
			"min": 1000,
                        "required": "no"
                    },
                    {
                        "key": "dfs_namenode_handler_count",
                        "label": "dfs.namenode.handler.count",
                        "description": "The number of server threads for the name node",
                        "type": "integer",
                        "default": 10,
			"min":	10,
                        "required": "no"
                    },
                    {
                        "key": "dfs_datanode_handler_count",
                        "label": "dfs.datanode.handler.count",
                        "description": "The number of server threads for the data node",
                        "type": "integer",
                        "default": 10,
			"min":	10,
                        "required":"no"
                    },
                    {
                        "key": "dfs_replication",
                        "label": "dfs.replication",
                        "description": "The replication factor in HDFS",
                        "type": "integer",
                        "default": 2,
			"min":	2,
                        "required": "yes"
                    },
                    {
                        "key": "fs_trash_interval",
                        "label": "fs.trash.interval",
                        "description": "It controls the number of minutes after which a trash checkpoint directory is deleted",
                        "type": "integer",
                        "default": 1440,
			"min":	1440,
                        "required": "yes"
                    },
	   	    {
            		"key": "yarn.resourcemanager.client.thread-count",
	                "label": "yarn.resourcemanager.client.thread-count",
            		"description": "The number of threads used to handle applications manager requests",
            		"type": "integer",
            		"default": 50,
			"min":	10,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.resourcemanager.amlauncher.thread-count",
	                "label": "yarn.resourcemanager.amlauncher.thread-count",
            		"description": "Number of threads used to launch/cleanup AM",
            		"type": "integer",
            		"default": 50,
			"min":	10,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.resourcemanager.scheduler.client.thread-count",
	                "label": "yarn.resourcemanager.scheduler.client.thread-count",
            		"description": "Number of threads to handle scheduler interface",
            		"type": "integer",
            		"default": 50,
			"min":	10,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.resourcemanager.resource-tracker.client.thread-count",
	                "label": "yarn.resourcemanager.resource-tracker.client.thread-count",
            		"description": "Number of threads to handle resource tracker calls",
            		"type": "integer",
            		"default": 50,
			"min":	10,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.resourcemanager.admin.client.thread-count",
	                "label": "yarn.resourcemanager.admin.client.thread-count",
            		"description": "Number of threads used to handle RM admin interface",
            		"type": "integer",
            		"default": 1,
			"min":	1,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.nodemanager.container-manager.thread-count",
	                "label": "yarn.nodemanager.container-manager.thread-count",
            		"description": "Number of threads container manager uses",
            		"type": "integer",
            		"default": 20,
			"min":	10,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.nodemanager.delete.thread-count",
	                "label": "yarn.nodemanager.delete.thread-count",
            		"description": "Number of threads used in cleanup",
            		"type": "integer",
            		"default": 4,
			"min":	4,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.nodemanager.localizer.client.thread-count",
	                "label": "yarn.nodemanager.localizer.client.thread-count",
            		"description": "Number of threads to handle localization requests",
            		"type": "integer",
            		"default": 5,
			"min":	5,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.nodemanager.localizer.fetch.thread-count",
	                "label": "yarn.nodemanager.localizer.fetch.thread-count",
            		"description": "Number of threads to use for localization fetching",
            		"type": "integer",
            		"default": 4,
			"min":	4,
            		"required":"no"
	            },
		    {
		        "key": "yarn_log-aggregation-enable",
            		"label": "yarn.log-aggregation-enable",
            		"description": "Whether to enable aggregation log or not",
            		"type": "boolean",
            		"default": false,
            		"required":"no"
        	    },
        	    {
            		"key": "yarn_log-aggregation_retain-seconds",
	                "label": "yarn.log-aggregation.retain-seconds",
            		"description": "How long to keep aggregation logs",
            		"type": "integer",
            		"default": 86400,
			"min":	-1,
            		"required":"no"
	            },
	   	    {
            		"key": "yarn.log-aggregation.retain-check-interval-seconds",
	                "label": "yarn.log-aggregation.retain-check-interval-seconds",
            		"description": "How long to wait between aggregated log retention checks. If set to 0 or a negative value then the value is computed as one-tenth of the aggregated log retention time. Be careful set this too small and you will spam the name node.",
            		"type": "integer",
            		"default": 7200,
			"min":	-1,
			"max":	86400,
            		"required":"no"
	            },
                    {
                        "key": "yarn.nodemanager.remote-app-log-dir",
                        "label": "yarn.nodemanager.remote-app-log-dir",
                        "description": "Where to aggregate logs to",
                        "type": "string",
                        "default": "/tmp/logs",
                        "required": "no"
                    },
                    {
                        "key": "yarn.nodemanager.remote-app-log-dir-suffix",
                        "label": "yarn.nodemanager.remote-app-log-dir-suffix",
                        "description": "The remote log dir will be created at {yarn.nodemanager.remote-app-log-dir}/${user}/{thisParam}",
                        "type": "string",
                        "default": "logs",
                        "required": "no"
                    },
        	    {
            		"key": "yarn.nodemanager.resource.memory-mb",
	                "label": "yarn.log-aggregation.retain-seconds",
            		"description": "Amount of physical memory, in MB, that can be allocated for containers.",
            		"type": "integer",
            		"default": 8192,
			"min":	1024,
			"max":	32768,
            		"required":"no"
	            },
		    {
		        "key": "yarn.nodemanager.pmem-check-enabled",
            		"label": "yarn.nodemanager.pmem-check-enabled",
            		"description": "Whether physical memory limits will be enforced for containers.",
            		"type": "boolean",
            		"default": true,
            		"required":"no"
        	    },
		    {
		        "key": "yarn.nodemanager.vmem-check-enabled",
            		"label": "yarn.nodemanager.vmem-check-enabled",
            		"description": "Whether virtual memory limits will be enforced for containers.",
            		"type": "boolean",
            		"default": true,
            		"required":"no"
        	    },
		    {
		        "key": "yarn.nodemanager.vmem-pmem-ratio",
	                "label": "yarn.nodemanager.vmem-pmem-ratio",
            		"description": "The ratio of virtual memory to physical memory in node manager",
            		"type": "number",
            		"default": 2.1,
			"min":	1.0,
            		"required":"no"
		    },
		    {
		        "key": "yarn_scheduler_capacity_maximum-am-resource-percent",
		        "label": "yarn.scheduler.capacity.maximum-am-resource-percent",
		        "description": "Max percent of application master process",
		        "type": "number",
		        "default": 0.3,
			"min":	0.01,
			"max":	0.99,
		        "required":"no"
		    }
                ]
            }
        ]
    }
